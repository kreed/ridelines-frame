name: Base Stage Workflow

on:
  workflow_call:
    inputs:
      environment:
        description: 'Target environment (dev/prod)'
        required: true
        type: string
      bundle_version:
        description: 'Bundle version to stage'
        required: true
        type: string
      role_arn:
        description: 'AWS Role ARN to assume for this stage'
        required: true
        type: string
      aws_region:
        description: 'AWS region for this stage'
        required: true
        type: string
    secrets:
      additional_tfvars:
        description: 'Additional tfvars content to append'
        required: true

permissions:
  contents: write
  packages: read
  id-token: write

env:
  REGISTRY: ghcr.io
  BUNDLE_IMAGE: kreed/ridelines-bundle

jobs:
  stage:
    name: Prepare
    runs-on: ubuntu-latest

    steps:
      - name: Checkout frame repository
        uses: actions/checkout@v5

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.10.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role_arn }}
          aws-region: ${{ inputs.aws_region }}
          role-session-name: ${{ github.run_id }}

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get bundle version and metadata
        id: bundle
        run: |
          # Use bundle version from input
          BUNDLE_VERSION="${{ inputs.bundle_version }}"
          echo "bundle_version=${BUNDLE_VERSION}" >> $GITHUB_OUTPUT
          
          # Pull the specific bundle version
          docker pull ghcr.io/${{ env.BUNDLE_IMAGE }}:${BUNDLE_VERSION}
          
          # Extract metadata from container labels
          FRAME_COMMIT=$(docker inspect ghcr.io/${{ env.BUNDLE_IMAGE }}:${BUNDLE_VERSION} | jq -r '.[0].Config.Labels["ridelines.commit.frame"]')
          HUB_COMMIT=$(docker inspect ghcr.io/${{ env.BUNDLE_IMAGE }}:${BUNDLE_VERSION} | jq -r '.[0].Config.Labels["ridelines.commit.hub"]')
          DRIVETRAIN_COMMIT=$(docker inspect ghcr.io/${{ env.BUNDLE_IMAGE }}:${BUNDLE_VERSION} | jq -r '.[0].Config.Labels["ridelines.commit.drivetrain"]')
          CHAINRING_COMMIT=$(docker inspect ghcr.io/${{ env.BUNDLE_IMAGE }}:${BUNDLE_VERSION} | jq -r '.[0].Config.Labels["ridelines.commit.chainring"]')
          TIPPECANOE_COMMIT=$(docker inspect ghcr.io/${{ env.BUNDLE_IMAGE }}:${BUNDLE_VERSION} | jq -r '.[0].Config.Labels["ridelines.commit.tippecanoe"]')
          
          echo "frame_commit=${FRAME_COMMIT}" >> $GITHUB_OUTPUT
          echo "hub_commit=${HUB_COMMIT}" >> $GITHUB_OUTPUT
          echo "drivetrain_commit=${DRIVETRAIN_COMMIT}" >> $GITHUB_OUTPUT
          echo "chainring_commit=${CHAINRING_COMMIT}" >> $GITHUB_OUTPUT
          echo "tippecanoe_commit=${TIPPECANOE_COMMIT}" >> $GITHUB_OUTPUT
          
          echo "Bundle version: ${BUNDLE_VERSION}"
          echo "Component commits loaded from container labels"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get previous bundle commits
        id: previous_commits
        run: |
          # Pull previous bundle image
          docker pull ghcr.io/${{ env.BUNDLE_IMAGE }}:${{ inputs.environment }}-current || true
          
          # Get labels from previous bundle in one call (if image exists)
          LABELS=$(docker inspect ghcr.io/${{ env.BUNDLE_IMAGE }}:${{ inputs.environment }}-current 2>/dev/null | jq -r '.[0].Config.Labels // {}' || echo '{}')
          
          if [ "$LABELS" != "{}" ]; then
            # Extract commit values from labels
            PREV_FRAME_COMMIT=$(echo "$LABELS" | jq -r '."ridelines.commit.frame" // "unknown"')
            PREV_HUB_COMMIT=$(echo "$LABELS" | jq -r '."ridelines.commit.hub" // "unknown"')
            PREV_DRIVETRAIN_COMMIT=$(echo "$LABELS" | jq -r '."ridelines.commit.drivetrain" // "unknown"')
            PREV_CHAINRING_COMMIT=$(echo "$LABELS" | jq -r '."ridelines.commit.chainring" // "unknown"')
            PREV_TIPPECANOE_COMMIT=$(echo "$LABELS" | jq -r '."ridelines.commit.tippecanoe" // "unknown"')
            
            echo "prev_frame_commit=${PREV_FRAME_COMMIT}" >> $GITHUB_OUTPUT
            echo "prev_hub_commit=${PREV_HUB_COMMIT}" >> $GITHUB_OUTPUT  
            echo "prev_drivetrain_commit=${PREV_DRIVETRAIN_COMMIT}" >> $GITHUB_OUTPUT
            echo "prev_chainring_commit=${PREV_CHAINRING_COMMIT}" >> $GITHUB_OUTPUT
            echo "prev_tippecanoe_commit=${PREV_TIPPECANOE_COMMIT}" >> $GITHUB_OUTPUT
            
            echo "Previous commits extracted successfully"
          else
            echo "Previous bundle image not available"
          fi

      - name: Generate OpenTofu plan
        run: |
          # Extract bundle to get OpenTofu files and artifacts
          docker create --name bundle-extract ghcr.io/${{ env.BUNDLE_IMAGE }}:${{ steps.bundle.outputs.bundle_version }} /bin/sh
          docker cp bundle-extract:/deployment/ ./staging/
          docker rm bundle-extract
          
          # Generate plan for specified environment
          cd staging/terraform/environments/${{ inputs.environment }}
          
          # Append additional tfvars to the existing terraform.tfvars
          cat << 'TFVARS_EOF' >> terraform.tfvars
          ${{ secrets.additional_tfvars }}
          TFVARS_EOF
          
          tofu init
          tofu plan -out=plan.tfplan -var-file=terraform.tfvars
          tofu show -no-color plan.tfplan > $GITHUB_WORKSPACE/opentofu-plan.txt
          
          # Move plan file to workspace root for upload
          mv plan.tfplan $GITHUB_WORKSPACE/opentofu-${{ inputs.environment }}.tfplan

      - name: Upload OpenTofu plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: opentofu-plan-${{ inputs.environment }}-${{ steps.bundle.outputs.bundle_version }}
          path: opentofu-${{ inputs.environment }}.tfplan
          retention-days: 7

      - name: Create staging summary
        run: |
          echo "## ${{ inputs.environment == 'prod' && 'Production' || 'Development' }} Staging Summary" >> $GITHUB_STEP_SUMMARY
          echo "ðŸŸ¡ **Status:** Staged and ready for deployment" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“¦ **Bundle:** ${{ steps.bundle.outputs.bundle_version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Component Commits" >> $GITHUB_STEP_SUMMARY
          # Show changes with diff links or "unchanged"
          
          # Frame
          if [ "${{ steps.previous_commits.outputs.prev_frame_commit }}" = "${{ steps.bundle.outputs.frame_commit }}" ]; then
            echo "- **Frame:** [$(echo ${{ steps.bundle.outputs.frame_commit }} | cut -c1-7)](https://github.com/kreed/ridelines-frame/commit/${{ steps.bundle.outputs.frame_commit }}) (unchanged)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Frame:** [$(echo ${{ steps.previous_commits.outputs.prev_frame_commit }} | cut -c1-7)..$(echo ${{ steps.bundle.outputs.frame_commit }} | cut -c1-7)](https://github.com/kreed/ridelines-frame/compare/${{ steps.previous_commits.outputs.prev_frame_commit }}..${{ steps.bundle.outputs.frame_commit }})" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Hub  
          if [ "${{ steps.previous_commits.outputs.prev_hub_commit }}" = "${{ steps.bundle.outputs.hub_commit }}" ]; then
            echo "- **Hub:** [$(echo ${{ steps.bundle.outputs.hub_commit }} | cut -c1-7)](https://github.com/kreed/ridelines-hub/commit/${{ steps.bundle.outputs.hub_commit }}) (unchanged)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Hub:** [$(echo ${{ steps.previous_commits.outputs.prev_hub_commit }} | cut -c1-7)..$(echo ${{ steps.bundle.outputs.hub_commit }} | cut -c1-7)](https://github.com/kreed/ridelines-hub/compare/${{ steps.previous_commits.outputs.prev_hub_commit }}..${{ steps.bundle.outputs.hub_commit }})" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Drivetrain
          if [ "${{ steps.previous_commits.outputs.prev_drivetrain_commit }}" = "${{ steps.bundle.outputs.drivetrain_commit }}" ]; then
            echo "- **Drivetrain:** [$(echo ${{ steps.bundle.outputs.drivetrain_commit }} | cut -c1-7)](https://github.com/kreed/ridelines-drivetrain/commit/${{ steps.bundle.outputs.drivetrain_commit }}) (unchanged)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Drivetrain:** [$(echo ${{ steps.previous_commits.outputs.prev_drivetrain_commit }} | cut -c1-7)..$(echo ${{ steps.bundle.outputs.drivetrain_commit }} | cut -c1-7)](https://github.com/kreed/ridelines-drivetrain/compare/${{ steps.previous_commits.outputs.prev_drivetrain_commit }}..${{ steps.bundle.outputs.drivetrain_commit }})" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Chainring
          if [ "${{ steps.previous_commits.outputs.prev_chainring_commit }}" = "${{ steps.bundle.outputs.chainring_commit }}" ]; then
            echo "- **Chainring:** [$(echo ${{ steps.bundle.outputs.chainring_commit }} | cut -c1-7)](https://github.com/kreed/ridelines-chainring/commit/${{ steps.bundle.outputs.chainring_commit }}) (unchanged)" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Chainring:** [$(echo ${{ steps.previous_commits.outputs.prev_chainring_commit }} | cut -c1-7)..$(echo ${{ steps.bundle.outputs.chainring_commit }} | cut -c1-7)](https://github.com/kreed/ridelines-chainring/compare/${{ steps.previous_commits.outputs.prev_chainring_commit }}..${{ steps.bundle.outputs.chainring_commit }})" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Tippecanoe
          if [ "${{ steps.previous_commits.outputs.prev_tippecanoe_commit }}" = "${{ steps.bundle.outputs.tippecanoe_commit }}" ]; then
            echo "- **Tippecanoe:** [$(echo ${{ steps.bundle.outputs.tippecanoe_commit }} | cut -c1-7)](https://github.com/felt/tippecanoe/commit/${{ steps.bundle.outputs.tippecanoe_commit }}) (unchanged)" >> $GITHUB_STEP_SUMMARY
          else  
            echo "- **Tippecanoe:** [$(echo ${{ steps.previous_commits.outputs.prev_tippecanoe_commit }} | cut -c1-7)..$(echo ${{ steps.bundle.outputs.tippecanoe_commit }} | cut -c1-7)](https://github.com/felt/tippecanoe/compare/${{ steps.previous_commits.outputs.prev_tippecanoe_commit }}..${{ steps.bundle.outputs.tippecanoe_commit }})" >> $GITHUB_STEP_SUMMARY
          fi
                              
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "<details>" >> $GITHUB_STEP_SUMMARY
          echo "<summary>OpenTofu Plan</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```hcl' >> $GITHUB_STEP_SUMMARY
          cat opentofu-plan.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY
